##################################
# Enviroments for docker-compose
##################################
WEB_HOST_PORT = 8001
DB_PORT_EXTERNAL = 5432
DUMP_DB_PORT_EXTERNAL = 54321
RABBITMQ_PORT_EXTERNAL = 5672
RABBITMQ_MANAGEMENT_PORT_EXTERNAL = 15672

##################################
# NGINX options
#################################
DOCKER_NGINX_FULL_TAG = "nexus.DOMAIN/BANK/nginx:1.21.6"

##################################
# Enviroments for T-Vendor front
##################################
DOCKER_T-Vendor_FRONT_MANAGER_IMG_FULL_TAG = "nexus.DOMAIN/BANK/vendor-frontend-manager:2.4.3-fix-1924-1"
DOCKER_T-Vendor_FRONT_MANAGER_API_URL = "https://manager.backend.cert-DEPARTMENT.DOMAIN"
DOCKER_T-Vendor_FRONT_MANAGER_PROF_API_URL = "https://profiling.api.cert-DEPARTMENT.DOMAIN"

##################################
# Enviroments для prod-версии docker-compose
##################################
DOCKER_WEB_IMG_FULL_TAG = "nexus.DOMAIN/BANK/backend:1.27.1"
DOCKER_POSTGRES_IMG_FULL_TAG = "nexus.DOMAIN/general/postgres:13.2-alpine"
DOCKER_RABBITMQ_IMG_FULL_TAG = "nexus.DOMAIN/general/rabbitmq:management"

##################################
# Enviroments for audit-printer
##################################
DOCKER_AUDIT_PRINTER_FULL_TAG = "nexus.DOMAIN/BANK/audit_printer:1.0.4"
RABBITMQ_QUEUE_NAME = "audit_log"

##################################
# Enviroments for application
##################################
DEBUG = 1
SECRET_KEY = ""
ALLOWED_HOST_LIST = "*"
TEMPLATES_DIRS_LIST = "/usr/src/app/BANK/templates"
CLIENT_ALLOWED_HOST_LIST="*"

# postgres settings
DB_NAME = BANK
DB_USER = BANK
DB_PASSWORD = ""
DB_HOST = db1.cert.BANK.DOMAIN
DB_PORT = 5432

# Доступ к основной БД
DEFAULT_DB_NAME = BANK
DEFAULT_DB_USER = BANK
DEFAULT_DB_PASSWORD = ""
DEFAULT_DB_HOST = db1.cert.BANK.DOMAIN
DEFAULT_DB_PORT = 5432

# Доступ к дамповой БД
DUMP_DB_NAME = BANK_dump
DUMP_DB_USER = BANK
DUMP_DB_PASSWORD = ""
DUMP_DB_HOST = db-dump
DUMP_DB_PORT = 5432

# Доступ к rabbit
RABBITMQ_HOST = rabbitmq
RABBITMQ_PORT = 5672

CELERY_BROKER_URL="amqp://rabbitmq:5672"
CELERY_RABBITMQ_MANAGEMENT_HOST="http://rabbitmq:15672"
CELERY_RESULT_BACKEND="redis://redis/0"
SESSION_COOKIE_NAME="sessionid_vip-clientsment"
ACCESS_TOKEN_LIFETIME_MINUTES=1440

STATICFILES_DIRS_LIST = "/usr/src/app/BANK/static"
# для постоянного хранилища должно быть персистентным volume в контейнере, одним или разными
STATIC_ROOT = "/usr/src/storage"
MEDIA_ROOT = "/usr/src/storage/media"

# Доступ к сервису генерации новостей
AI_NEWS_URL = "https://wso2ei.rsb.dmz.DOMAIN/vip-clients/news/v1.0"
AI_NEWS_TOKEN = ''

# Фейковая авторизация менеджера,
# если пусто, то используется авторизация по LDAP
FAKE_MANAGER_PASSWORD = ""

# Токен для external_exchange
EXTERNAL_EXCHANGE_STATIC_TOKEN=""

SILK_ENABLE = 0

LOG_LEVEL = DEBUG

# Стандартные проценты комиссии для типов продуктов (0.00 <= x <= 100.00)
DEFAULT_COMMISSION_MIN="0.50"
DEFAULT_COMMISSION_DEFAULT="1.20"
DEFAULT_COMMISSION_MAX="3.00"

# Настройка отчетов
REPORT_STATIC_DOMAIN=http://pdf-static-web.domain
#REPORT_REQUEST_URL=http://html-pdf-web.domain/pdf.php
#REPORT_DOMAIN=http://html-pdf-web.domain
#REPORT_STATIC_DOMAIN=https://reports.cert.BANK.DOMAIN/static
REPORT_REQUEST_URL=https://reports.cert.BANK.DOMAIN/pdf.php
REPORT_DOMAIN=https://reports.cert.BANK.DOMAIN
REPORT_BEARER_KEY=""
REPORT_ROOT="/usr/src/storage/media/reports"
REPORT_DAYS_SHIFT=365

CELERY_RESULT_BACKEND = "redis://redis/0"
BASICAUTH_USERS = "admin:PASSWORD"

# Настройка для работы с Bloomberg
BLOOMBERG_ROOT="/usr/src/storage/bloomberg"
BLOOMBERG_FTP_HOST="ftp"
BLOOMBERG_FTP_USER=
BLOOMBERG_FTP_PASSWORD=

REDIS_HOST=redis
REDIS_DB=1
REDIS_PORT=6379

EXPIRE_TIME_OF_PROFILING_REPORT=18000
##################################
# Clients backend options
##################################
WEB_CLIENT_WEB_HOST_PORT = 8002
CLIENT_SECRET_KEY = ""
BANK_BACKEND_BASE_URL = "https://manager.backend.cert-DEPARTMENT.DOMAIN/"

##################################
# PDF options
##################################
DOCKER_HTML_PDF_WEB_IMG_FULL_TAG = "nexus.DOMAIN/BANK/pdf/nginx:1.0.10"
DOCKER_HTML_PDF_PHP_IMG_FULL_TAG = "nexus.DOMAIN/BANK/pdf/php:1.2.0"
DOCKER_HTML_PDF_QUEUE_IMG_FULL_TAG = "nexus.DOMAIN/BANK/pdf/php:1.2.0"
DOCKER_HTML_PDF_CHROME_IMG_FULL_TAG = "nexus.DOMAIN/BANK/pdf/chrome:1.2.1"
DOCKER_REDIS_IMG_FULL_TAG = "nexus.DOMAIN/general/redis:6-alpine"
DOCKER_PDF_STATIC_WEB_IMG_FULL_TAG = "nexus.DOMAIN/BANK/pdf/static:2.3.0"

# PDF printing service port
PDF_SERVICE_PORT=8021

# Static Bearer auth key
PDF_TO_HTML_API_KEY=""

# Log files lifetime (set "never" to keep all log files)
PDF_LOG_FILE_LIFE_TIME="1 month"

# Do not remove cache files (html for generation and output pdfs)
PDF_DEBUG_NO_REMOVING_CACHE=0

# RabbitMQ external port
PDF_RABBIT_PORT=8022

# RabbitMQ connection in url format <user>:<pass>@host:<port><path>
PDF_RABBIT_HOST="guest:guest@html-pdf-rabbitmq:5672/"

# Redis connection in url format host:<port>
PDF_REDIS_HOST="html-pdf-redis:6379"

# PDF static port
PDF_STATIC_PORT=8020

# Web domain in Docker network
PDF_WEB_DOMAIN="html-pdf-web"

# Chrome url in docker
PDF_CHROME_URL="http://html-pdf-chrome:4444"
#PDF_CHROME_URL="https://chrome-route-BANK-utility-app-cert.apps.ocp.BANK.DOMAIN"

# php hostname for nginx
PDF_PHP_HOST="html-pdf-php"

##################################
# PROVIDER-API options
##################################
DOCKER_PROVIDER_API_IMG_FULL_TAG="nexus.DOMAIN/BANK/providers-api:0.4.1"
PERSISTENCE_DSN="postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}"
AMQP_DSN="amqp://guest:guest@${RABBITMQ_HOST}:5672/"
PROVIDER_API_KEYS='{
    "Provider1": "",
    "Provider2": "",
    "Provider3": ""
}'
PROVIDER_API_HOST_PORT=8085
HTTP_BASIC_USERNAME='BANK-provider-api-usr1'
HTTP_BASIC_PASSWORD=''

##################################
# Enviroments for profilling service
##################################
DOCKER_PROFILING_NGINX_IMG_FULL_TAG=nexus.DOMAIN/BANK/profiling/nginx:1.1.1
DOCKER_PROFILING_PHP_IMG_FULL_TAG=nexus.DOMAIN/BANK/profiling/php:1.5.2
DOCKER_PROFILING_DB_IMG_FULL_TAG=nexus.DOMAIN/BANK/mysql:8.0.28

PROFILING_RABBIT_HOST="guest:guest@rabbitmq:5672/"
PROFILING_RABBIT_RESULTS_CHANNEL_NAME="profiling_queue"
# Внешний порт на котором доступен сервис (nginx)
PROFILING_SERVICE_PORT=8086

# Имя контейнера с php на который nginx будет проксировать запросы
PROFILING_PHP_HOST=profiling-php

# Внешний порт для phpmyadmin (only dev)
#PROFILING_PMA_SERVICE_PORT=8081

# Имя ноды rabbit. Необходимо при запуске rabbitmq в docker-среде
PROFILING_RABBIT_NODENAME=rabbit@localhost

# RabbitMQ settings
#PROFILING_RABBIT_PORT=5672
# Порт web-интерфейса управления rabbitmq
PROFILING_RABBIT_MANAGEMENT_PORT=15673

# Параметры доступа к базе данных приложения
PROFILING_DB_HOST=profiling-db
PROFILING_DB_NAME=profiling_new
PROFILING_DB_USER=root
PROFILING_DB_PASS=root
PROFILING_DB_PORT=3306

# Yii DEBUG & ENV
YII_DEBUG = false
YII_ENV = prod

# Настройка хранилища изображений к опросам
PROFILING_ANSWER_BASE_DIR="/profiling/storage/answers"
PROFILING_ANSWER_BASE_URL="https://profiling.api.cert-DEPARTMENT.DOMAIN/files/answers"
# Настройка аргументов
DEAD_LETTER_EXCHANGE_ARGUMENT="events_exchange_letter"

# UID пользователя для запуска процесса приложения через docker-compose под нужным пользователем
HOST_SYSTEM_UID=0

# Идентификатор пользователя для установки прав на файлы приложения и для запуска entrypoint указанным пользователем при сборке image
APP_UID=0
